version: "3.9"

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:17
    container_name: postgres-container
    environment:
      POSTGRES_USER: bruno
      POSTGRES_PASSWORD: senha123
      POSTGRES_DB: literatura_publica
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bruno -d literatura_publica"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-container
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/literatura_publica
      SPRING_DATASOURCE_USERNAME: bruno
      SPRING_DATASOURCE_PASSWORD: senha123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - NODE_ENV=development

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
